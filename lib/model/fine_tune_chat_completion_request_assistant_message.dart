//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.18

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

part of openapi.api;

class FineTuneChatCompletionRequestAssistantMessage {
  /// Returns a new [FineTuneChatCompletionRequestAssistantMessage] instance.
  FineTuneChatCompletionRequestAssistantMessage({
    this.content,
    this.refusal,
    required this.role,
    this.name,
    this.audio,
    this.toolCalls = const [],
    this.functionCall,
    this.weight,
  });

  ///
  /// Please note: This property should have been non-nullable! Since the specification file
  /// does not include a default value (using the "default:" property), however, the generated
  /// source code must fall back to having a nullable type.
  /// Consider adding a "default:" property in the specification file to hide this note.
  ///
  ChatCompletionRequestAssistantMessageContent? content;

  /// The refusal message by the assistant.
  ///
  /// Please note: This property should have been non-nullable! Since the specification file
  /// does not include a default value (using the "default:" property), however, the generated
  /// source code must fall back to having a nullable type.
  /// Consider adding a "default:" property in the specification file to hide this note.
  ///
  String? refusal;

  /// The role of the messages author, in this case `assistant`.
  FineTuneChatCompletionRequestAssistantMessageRoleEnum role;

  /// An optional name for the participant. Provides the model information to differentiate between participants of the same role.
  ///
  /// Please note: This property should have been non-nullable! Since the specification file
  /// does not include a default value (using the "default:" property), however, the generated
  /// source code must fall back to having a nullable type.
  /// Consider adding a "default:" property in the specification file to hide this note.
  ///
  String? name;

  ///
  /// Please note: This property should have been non-nullable! Since the specification file
  /// does not include a default value (using the "default:" property), however, the generated
  /// source code must fall back to having a nullable type.
  /// Consider adding a "default:" property in the specification file to hide this note.
  ///
  ChatCompletionRequestAssistantMessageAudio? audio;

  /// The tool calls generated by the model, such as function calls.
  List<ChatCompletionMessageToolCall> toolCalls;

  ///
  /// Please note: This property should have been non-nullable! Since the specification file
  /// does not include a default value (using the "default:" property), however, the generated
  /// source code must fall back to having a nullable type.
  /// Consider adding a "default:" property in the specification file to hide this note.
  ///
  ChatCompletionRequestAssistantMessageFunctionCall? functionCall;

  /// Controls whether the assistant message is trained against (0 or 1)
  FineTuneChatCompletionRequestAssistantMessageWeightEnum? weight;

  @override
  bool operator ==(Object other) => identical(this, other) || other is FineTuneChatCompletionRequestAssistantMessage &&
    other.content == content &&
    other.refusal == refusal &&
    other.role == role &&
    other.name == name &&
    other.audio == audio &&
    _deepEquality.equals(other.toolCalls, toolCalls) &&
    other.functionCall == functionCall &&
    other.weight == weight;

  @override
  int get hashCode =>
    // ignore: unnecessary_parenthesis
    (content == null ? 0 : content!.hashCode) +
    (refusal == null ? 0 : refusal!.hashCode) +
    (role.hashCode) +
    (name == null ? 0 : name!.hashCode) +
    (audio == null ? 0 : audio!.hashCode) +
    (toolCalls.hashCode) +
    (functionCall == null ? 0 : functionCall!.hashCode) +
    (weight == null ? 0 : weight!.hashCode);

  @override
  String toString() => 'FineTuneChatCompletionRequestAssistantMessage[content=$content, refusal=$refusal, role=$role, name=$name, audio=$audio, toolCalls=$toolCalls, functionCall=$functionCall, weight=$weight]';

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (this.content != null) {
      json[r'content'] = this.content;
    } else {
      json[r'content'] = null;
    }
    if (this.refusal != null) {
      json[r'refusal'] = this.refusal;
    } else {
      json[r'refusal'] = null;
    }
      json[r'role'] = this.role;
    if (this.name != null) {
      json[r'name'] = this.name;
    } else {
      json[r'name'] = null;
    }
    if (this.audio != null) {
      json[r'audio'] = this.audio;
    } else {
      json[r'audio'] = null;
    }
      json[r'tool_calls'] = this.toolCalls;
    if (this.functionCall != null) {
      json[r'function_call'] = this.functionCall;
    } else {
      json[r'function_call'] = null;
    }
    if (this.weight != null) {
      json[r'weight'] = this.weight;
    } else {
      json[r'weight'] = null;
    }
    return json;
  }

  /// Returns a new [FineTuneChatCompletionRequestAssistantMessage] instance and imports its values from
  /// [value] if it's a [Map], null otherwise.
  // ignore: prefer_constructors_over_static_methods
  static FineTuneChatCompletionRequestAssistantMessage? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      // Ensure that the map contains the required keys.
      // Note 1: the values aren't checked for validity beyond being non-null.
      // Note 2: this code is stripped in release mode!
      assert(() {
        requiredKeys.forEach((key) {
          assert(json.containsKey(key), 'Required key "FineTuneChatCompletionRequestAssistantMessage[$key]" is missing from JSON.');
          assert(json[key] != null, 'Required key "FineTuneChatCompletionRequestAssistantMessage[$key]" has a null value in JSON.');
        });
        return true;
      }());

      return FineTuneChatCompletionRequestAssistantMessage(
        content: ChatCompletionRequestAssistantMessageContent.fromJson(json[r'content']),
        refusal: mapValueOfType<String>(json, r'refusal'),
        role: FineTuneChatCompletionRequestAssistantMessageRoleEnum.fromJson(json[r'role'])!,
        name: mapValueOfType<String>(json, r'name'),
        audio: ChatCompletionRequestAssistantMessageAudio.fromJson(json[r'audio']),
        toolCalls: ChatCompletionMessageToolCall.listFromJson(json[r'tool_calls']),
        functionCall: ChatCompletionRequestAssistantMessageFunctionCall.fromJson(json[r'function_call']),
        weight: FineTuneChatCompletionRequestAssistantMessageWeightEnum.fromJson(json[r'weight']),
      );
    }
    return null;
  }

  static List<FineTuneChatCompletionRequestAssistantMessage> listFromJson(dynamic json, {bool growable = false,}) {
    final result = <FineTuneChatCompletionRequestAssistantMessage>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = FineTuneChatCompletionRequestAssistantMessage.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  static Map<String, FineTuneChatCompletionRequestAssistantMessage> mapFromJson(dynamic json) {
    final map = <String, FineTuneChatCompletionRequestAssistantMessage>{};
    if (json is Map && json.isNotEmpty) {
      json = json.cast<String, dynamic>(); // ignore: parameter_assignments
      for (final entry in json.entries) {
        final value = FineTuneChatCompletionRequestAssistantMessage.fromJson(entry.value);
        if (value != null) {
          map[entry.key] = value;
        }
      }
    }
    return map;
  }

  // maps a json object with a list of FineTuneChatCompletionRequestAssistantMessage-objects as value to a dart map
  static Map<String, List<FineTuneChatCompletionRequestAssistantMessage>> mapListFromJson(dynamic json, {bool growable = false,}) {
    final map = <String, List<FineTuneChatCompletionRequestAssistantMessage>>{};
    if (json is Map && json.isNotEmpty) {
      // ignore: parameter_assignments
      json = json.cast<String, dynamic>();
      for (final entry in json.entries) {
        map[entry.key] = FineTuneChatCompletionRequestAssistantMessage.listFromJson(entry.value, growable: growable,);
      }
    }
    return map;
  }

  /// The list of required keys that must be present in a JSON.
  static const requiredKeys = <String>{
    'role',
  };
}

/// The role of the messages author, in this case `assistant`.
class FineTuneChatCompletionRequestAssistantMessageRoleEnum {
  /// Instantiate a new enum with the provided [value].
  const FineTuneChatCompletionRequestAssistantMessageRoleEnum._(this.value);

  /// The underlying value of this enum member.
  final String value;

  @override
  String toString() => value;

  String toJson() => value;

  static const assistant = FineTuneChatCompletionRequestAssistantMessageRoleEnum._(r'assistant');

  /// List of all possible values in this [enum][FineTuneChatCompletionRequestAssistantMessageRoleEnum].
  static const values = <FineTuneChatCompletionRequestAssistantMessageRoleEnum>[
    assistant,
  ];

  static FineTuneChatCompletionRequestAssistantMessageRoleEnum? fromJson(dynamic value) => FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer().decode(value);

  static List<FineTuneChatCompletionRequestAssistantMessageRoleEnum> listFromJson(dynamic json, {bool growable = false,}) {
    final result = <FineTuneChatCompletionRequestAssistantMessageRoleEnum>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = FineTuneChatCompletionRequestAssistantMessageRoleEnum.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }
}

/// Transformation class that can [encode] an instance of [FineTuneChatCompletionRequestAssistantMessageRoleEnum] to String,
/// and [decode] dynamic data back to [FineTuneChatCompletionRequestAssistantMessageRoleEnum].
class FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer {
  factory FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer() => _instance ??= const FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer._();

  const FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer._();

  String encode(FineTuneChatCompletionRequestAssistantMessageRoleEnum data) => data.value;

  /// Decodes a [dynamic value][data] to a FineTuneChatCompletionRequestAssistantMessageRoleEnum.
  ///
  /// If [allowNull] is true and the [dynamic value][data] cannot be decoded successfully,
  /// then null is returned. However, if [allowNull] is false and the [dynamic value][data]
  /// cannot be decoded successfully, then an [UnimplementedError] is thrown.
  ///
  /// The [allowNull] is very handy when an API changes and a new enum value is added or removed,
  /// and users are still using an old app with the old code.
  FineTuneChatCompletionRequestAssistantMessageRoleEnum? decode(dynamic data, {bool allowNull = true}) {
    if (data != null) {
      switch (data) {
        case r'assistant': return FineTuneChatCompletionRequestAssistantMessageRoleEnum.assistant;
        default:
          if (!allowNull) {
            throw ArgumentError('Unknown enum value to decode: $data');
          }
      }
    }
    return null;
  }

  /// Singleton [FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer] instance.
  static FineTuneChatCompletionRequestAssistantMessageRoleEnumTypeTransformer? _instance;
}


/// Controls whether the assistant message is trained against (0 or 1)
class FineTuneChatCompletionRequestAssistantMessageWeightEnum {
  /// Instantiate a new enum with the provided [value].
  const FineTuneChatCompletionRequestAssistantMessageWeightEnum._(this.value);

  /// The underlying value of this enum member.
  final int value;

  @override
  String toString() => value.toString();

  int toJson() => value;

  static const number0 = FineTuneChatCompletionRequestAssistantMessageWeightEnum._(0);
  static const number1 = FineTuneChatCompletionRequestAssistantMessageWeightEnum._(1);

  /// List of all possible values in this [enum][FineTuneChatCompletionRequestAssistantMessageWeightEnum].
  static const values = <FineTuneChatCompletionRequestAssistantMessageWeightEnum>[
    number0,
    number1,
  ];

  static FineTuneChatCompletionRequestAssistantMessageWeightEnum? fromJson(dynamic value) => FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer().decode(value);

  static List<FineTuneChatCompletionRequestAssistantMessageWeightEnum> listFromJson(dynamic json, {bool growable = false,}) {
    final result = <FineTuneChatCompletionRequestAssistantMessageWeightEnum>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = FineTuneChatCompletionRequestAssistantMessageWeightEnum.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }
}

/// Transformation class that can [encode] an instance of [FineTuneChatCompletionRequestAssistantMessageWeightEnum] to int,
/// and [decode] dynamic data back to [FineTuneChatCompletionRequestAssistantMessageWeightEnum].
class FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer {
  factory FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer() => _instance ??= const FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer._();

  const FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer._();

  int encode(FineTuneChatCompletionRequestAssistantMessageWeightEnum data) => data.value;

  /// Decodes a [dynamic value][data] to a FineTuneChatCompletionRequestAssistantMessageWeightEnum.
  ///
  /// If [allowNull] is true and the [dynamic value][data] cannot be decoded successfully,
  /// then null is returned. However, if [allowNull] is false and the [dynamic value][data]
  /// cannot be decoded successfully, then an [UnimplementedError] is thrown.
  ///
  /// The [allowNull] is very handy when an API changes and a new enum value is added or removed,
  /// and users are still using an old app with the old code.
  FineTuneChatCompletionRequestAssistantMessageWeightEnum? decode(dynamic data, {bool allowNull = true}) {
    if (data != null) {
      switch (data) {
        case 0: return FineTuneChatCompletionRequestAssistantMessageWeightEnum.number0;
        case 1: return FineTuneChatCompletionRequestAssistantMessageWeightEnum.number1;
        default:
          if (!allowNull) {
            throw ArgumentError('Unknown enum value to decode: $data');
          }
      }
    }
    return null;
  }

  /// Singleton [FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer] instance.
  static FineTuneChatCompletionRequestAssistantMessageWeightEnumTypeTransformer? _instance;
}


