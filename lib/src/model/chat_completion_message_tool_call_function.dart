//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'chat_completion_message_tool_call_function.g.dart';

/// The function that the model called.
///
/// Properties:
/// * [name] - The name of the function to call.
/// * [arguments] - The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
@BuiltValue()
abstract class ChatCompletionMessageToolCallFunction implements Built<ChatCompletionMessageToolCallFunction, ChatCompletionMessageToolCallFunctionBuilder> {
  /// The name of the function to call.
  @BuiltValueField(wireName: r'name')
  String get name;

  /// The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
  @BuiltValueField(wireName: r'arguments')
  String get arguments;

  ChatCompletionMessageToolCallFunction._();

  factory ChatCompletionMessageToolCallFunction([void updates(ChatCompletionMessageToolCallFunctionBuilder b)]) = _$ChatCompletionMessageToolCallFunction;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(ChatCompletionMessageToolCallFunctionBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<ChatCompletionMessageToolCallFunction> get serializer => _$ChatCompletionMessageToolCallFunctionSerializer();
}

class _$ChatCompletionMessageToolCallFunctionSerializer implements PrimitiveSerializer<ChatCompletionMessageToolCallFunction> {
  @override
  final Iterable<Type> types = const [ChatCompletionMessageToolCallFunction, _$ChatCompletionMessageToolCallFunction];

  @override
  final String wireName = r'ChatCompletionMessageToolCallFunction';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    ChatCompletionMessageToolCallFunction object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'name';
    yield serializers.serialize(
      object.name,
      specifiedType: const FullType(String),
    );
    yield r'arguments';
    yield serializers.serialize(
      object.arguments,
      specifiedType: const FullType(String),
    );
  }

  @override
  Object serialize(
    Serializers serializers,
    ChatCompletionMessageToolCallFunction object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required ChatCompletionMessageToolCallFunctionBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'name':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.name = valueDes;
          break;
        case r'arguments':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.arguments = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  ChatCompletionMessageToolCallFunction deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = ChatCompletionMessageToolCallFunctionBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

