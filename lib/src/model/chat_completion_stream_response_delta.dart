//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:openai_flutter_sdk/src/model/chat_completion_message_tool_call_chunk.dart';
import 'package:openai_flutter_sdk/src/model/chat_completion_stream_response_delta_function_call.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'chat_completion_stream_response_delta.g.dart';

/// A chat completion delta generated by streamed model responses.
///
/// Properties:
/// * [content] - The contents of the chunk message.
/// * [functionCall] 
/// * [toolCalls] 
/// * [role] - The role of the author of this message.
/// * [refusal] - The refusal message generated by the model.
@BuiltValue()
abstract class ChatCompletionStreamResponseDelta implements Built<ChatCompletionStreamResponseDelta, ChatCompletionStreamResponseDeltaBuilder> {
  /// The contents of the chunk message.
  @BuiltValueField(wireName: r'content')
  String? get content;

  @Deprecated('functionCall has been deprecated')
  @BuiltValueField(wireName: r'function_call')
  ChatCompletionStreamResponseDeltaFunctionCall? get functionCall;

  @BuiltValueField(wireName: r'tool_calls')
  BuiltList<ChatCompletionMessageToolCallChunk>? get toolCalls;

  /// The role of the author of this message.
  @BuiltValueField(wireName: r'role')
  ChatCompletionStreamResponseDeltaRoleEnum? get role;
  // enum roleEnum {  developer,  system,  user,  assistant,  tool,  };

  /// The refusal message generated by the model.
  @BuiltValueField(wireName: r'refusal')
  String? get refusal;

  ChatCompletionStreamResponseDelta._();

  factory ChatCompletionStreamResponseDelta([void updates(ChatCompletionStreamResponseDeltaBuilder b)]) = _$ChatCompletionStreamResponseDelta;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(ChatCompletionStreamResponseDeltaBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<ChatCompletionStreamResponseDelta> get serializer => _$ChatCompletionStreamResponseDeltaSerializer();
}

class _$ChatCompletionStreamResponseDeltaSerializer implements PrimitiveSerializer<ChatCompletionStreamResponseDelta> {
  @override
  final Iterable<Type> types = const [ChatCompletionStreamResponseDelta, _$ChatCompletionStreamResponseDelta];

  @override
  final String wireName = r'ChatCompletionStreamResponseDelta';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    ChatCompletionStreamResponseDelta object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    if (object.content != null) {
      yield r'content';
      yield serializers.serialize(
        object.content,
        specifiedType: const FullType(String),
      );
    }
    if (object.functionCall != null) {
      yield r'function_call';
      yield serializers.serialize(
        object.functionCall,
        specifiedType: const FullType(ChatCompletionStreamResponseDeltaFunctionCall),
      );
    }
    if (object.toolCalls != null) {
      yield r'tool_calls';
      yield serializers.serialize(
        object.toolCalls,
        specifiedType: const FullType(BuiltList, [FullType(ChatCompletionMessageToolCallChunk)]),
      );
    }
    if (object.role != null) {
      yield r'role';
      yield serializers.serialize(
        object.role,
        specifiedType: const FullType(ChatCompletionStreamResponseDeltaRoleEnum),
      );
    }
    if (object.refusal != null) {
      yield r'refusal';
      yield serializers.serialize(
        object.refusal,
        specifiedType: const FullType(String),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    ChatCompletionStreamResponseDelta object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required ChatCompletionStreamResponseDeltaBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'content':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.content = valueDes;
          break;
        case r'function_call':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(ChatCompletionStreamResponseDeltaFunctionCall),
          ) as ChatCompletionStreamResponseDeltaFunctionCall;
          result.functionCall.replace(valueDes);
          break;
        case r'tool_calls':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(BuiltList, [FullType(ChatCompletionMessageToolCallChunk)]),
          ) as BuiltList<ChatCompletionMessageToolCallChunk>;
          result.toolCalls.replace(valueDes);
          break;
        case r'role':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(ChatCompletionStreamResponseDeltaRoleEnum),
          ) as ChatCompletionStreamResponseDeltaRoleEnum;
          result.role = valueDes;
          break;
        case r'refusal':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.refusal = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  ChatCompletionStreamResponseDelta deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = ChatCompletionStreamResponseDeltaBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class ChatCompletionStreamResponseDeltaRoleEnum extends EnumClass {

  /// The role of the author of this message.
  @BuiltValueEnumConst(wireName: r'developer')
  static const ChatCompletionStreamResponseDeltaRoleEnum developer = _$chatCompletionStreamResponseDeltaRoleEnum_developer;
  /// The role of the author of this message.
  @BuiltValueEnumConst(wireName: r'system')
  static const ChatCompletionStreamResponseDeltaRoleEnum system = _$chatCompletionStreamResponseDeltaRoleEnum_system;
  /// The role of the author of this message.
  @BuiltValueEnumConst(wireName: r'user')
  static const ChatCompletionStreamResponseDeltaRoleEnum user = _$chatCompletionStreamResponseDeltaRoleEnum_user;
  /// The role of the author of this message.
  @BuiltValueEnumConst(wireName: r'assistant')
  static const ChatCompletionStreamResponseDeltaRoleEnum assistant = _$chatCompletionStreamResponseDeltaRoleEnum_assistant;
  /// The role of the author of this message.
  @BuiltValueEnumConst(wireName: r'tool')
  static const ChatCompletionStreamResponseDeltaRoleEnum tool = _$chatCompletionStreamResponseDeltaRoleEnum_tool;

  static Serializer<ChatCompletionStreamResponseDeltaRoleEnum> get serializer => _$chatCompletionStreamResponseDeltaRoleEnumSerializer;

  const ChatCompletionStreamResponseDeltaRoleEnum._(String name): super(name);

  static BuiltSet<ChatCompletionStreamResponseDeltaRoleEnum> get values => _$chatCompletionStreamResponseDeltaRoleEnumValues;
  static ChatCompletionStreamResponseDeltaRoleEnum valueOf(String name) => _$chatCompletionStreamResponseDeltaRoleEnumValueOf(name);
}

