//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'chat_completion_stream_response_delta_function_call.g.dart';

/// Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
///
/// Properties:
/// * [arguments] - The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
/// * [name] - The name of the function to call.
@Deprecated('ChatCompletionStreamResponseDeltaFunctionCall has been deprecated')
@BuiltValue()
abstract class ChatCompletionStreamResponseDeltaFunctionCall implements Built<ChatCompletionStreamResponseDeltaFunctionCall, ChatCompletionStreamResponseDeltaFunctionCallBuilder> {
  /// The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
  @BuiltValueField(wireName: r'arguments')
  String? get arguments;

  /// The name of the function to call.
  @BuiltValueField(wireName: r'name')
  String? get name;

  ChatCompletionStreamResponseDeltaFunctionCall._();

  factory ChatCompletionStreamResponseDeltaFunctionCall([void updates(ChatCompletionStreamResponseDeltaFunctionCallBuilder b)]) = _$ChatCompletionStreamResponseDeltaFunctionCall;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(ChatCompletionStreamResponseDeltaFunctionCallBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<ChatCompletionStreamResponseDeltaFunctionCall> get serializer => _$ChatCompletionStreamResponseDeltaFunctionCallSerializer();
}

class _$ChatCompletionStreamResponseDeltaFunctionCallSerializer implements PrimitiveSerializer<ChatCompletionStreamResponseDeltaFunctionCall> {
  @override
  final Iterable<Type> types = const [ChatCompletionStreamResponseDeltaFunctionCall, _$ChatCompletionStreamResponseDeltaFunctionCall];

  @override
  final String wireName = r'ChatCompletionStreamResponseDeltaFunctionCall';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    ChatCompletionStreamResponseDeltaFunctionCall object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    if (object.arguments != null) {
      yield r'arguments';
      yield serializers.serialize(
        object.arguments,
        specifiedType: const FullType(String),
      );
    }
    if (object.name != null) {
      yield r'name';
      yield serializers.serialize(
        object.name,
        specifiedType: const FullType(String),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    ChatCompletionStreamResponseDeltaFunctionCall object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required ChatCompletionStreamResponseDeltaFunctionCallBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'arguments':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.arguments = valueDes;
          break;
        case r'name':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.name = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  ChatCompletionStreamResponseDeltaFunctionCall deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = ChatCompletionStreamResponseDeltaFunctionCallBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

