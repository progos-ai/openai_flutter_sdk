//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:openai_flutter_sdk/src/model/code_interpreter_tool_call_outputs_inner.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'code_interpreter_tool_call.g.dart';

/// A tool call to run code. 
///
/// Properties:
/// * [type] - The type of the code interpreter tool call. Always `code_interpreter_call`. 
/// * [id] - The unique ID of the code interpreter tool call. 
/// * [status] - The status of the code interpreter tool call. 
/// * [containerId] - The ID of the container used to run the code. 
/// * [code] - The code to run, or null if not available. 
/// * [outputs] - The outputs generated by the code interpreter, such as logs or images.  Can be null if no outputs are available. 
@BuiltValue()
abstract class CodeInterpreterToolCall implements Built<CodeInterpreterToolCall, CodeInterpreterToolCallBuilder> {
  /// The type of the code interpreter tool call. Always `code_interpreter_call`. 
  @BuiltValueField(wireName: r'type')
  CodeInterpreterToolCallTypeEnum get type;
  // enum typeEnum {  code_interpreter_call,  };

  /// The unique ID of the code interpreter tool call. 
  @BuiltValueField(wireName: r'id')
  String get id;

  /// The status of the code interpreter tool call. 
  @BuiltValueField(wireName: r'status')
  CodeInterpreterToolCallStatusEnum get status;
  // enum statusEnum {  in_progress,  completed,  incomplete,  interpreting,  failed,  };

  /// The ID of the container used to run the code. 
  @BuiltValueField(wireName: r'container_id')
  String get containerId;

  /// The code to run, or null if not available. 
  @BuiltValueField(wireName: r'code')
  String get code;

  /// The outputs generated by the code interpreter, such as logs or images.  Can be null if no outputs are available. 
  @BuiltValueField(wireName: r'outputs')
  BuiltList<CodeInterpreterToolCallOutputsInner> get outputs;

  CodeInterpreterToolCall._();

  factory CodeInterpreterToolCall([void updates(CodeInterpreterToolCallBuilder b)]) = _$CodeInterpreterToolCall;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(CodeInterpreterToolCallBuilder b) => b
      ..type = const CodeInterpreterToolCallTypeEnum._('code_interpreter_call');

  @BuiltValueSerializer(custom: true)
  static Serializer<CodeInterpreterToolCall> get serializer => _$CodeInterpreterToolCallSerializer();
}

class _$CodeInterpreterToolCallSerializer implements PrimitiveSerializer<CodeInterpreterToolCall> {
  @override
  final Iterable<Type> types = const [CodeInterpreterToolCall, _$CodeInterpreterToolCall];

  @override
  final String wireName = r'CodeInterpreterToolCall';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    CodeInterpreterToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'type';
    yield serializers.serialize(
      object.type,
      specifiedType: const FullType(CodeInterpreterToolCallTypeEnum),
    );
    yield r'id';
    yield serializers.serialize(
      object.id,
      specifiedType: const FullType(String),
    );
    yield r'status';
    yield serializers.serialize(
      object.status,
      specifiedType: const FullType(CodeInterpreterToolCallStatusEnum),
    );
    yield r'container_id';
    yield serializers.serialize(
      object.containerId,
      specifiedType: const FullType(String),
    );
    yield r'code';
    yield serializers.serialize(
      object.code,
      specifiedType: const FullType(String),
    );
    yield r'outputs';
    yield serializers.serialize(
      object.outputs,
      specifiedType: const FullType(BuiltList, [FullType(CodeInterpreterToolCallOutputsInner)]),
    );
  }

  @override
  Object serialize(
    Serializers serializers,
    CodeInterpreterToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required CodeInterpreterToolCallBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(CodeInterpreterToolCallTypeEnum),
          ) as CodeInterpreterToolCallTypeEnum;
          result.type = valueDes;
          break;
        case r'id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.id = valueDes;
          break;
        case r'status':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(CodeInterpreterToolCallStatusEnum),
          ) as CodeInterpreterToolCallStatusEnum;
          result.status = valueDes;
          break;
        case r'container_id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.containerId = valueDes;
          break;
        case r'code':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.code = valueDes;
          break;
        case r'outputs':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(BuiltList, [FullType(CodeInterpreterToolCallOutputsInner)]),
          ) as BuiltList<CodeInterpreterToolCallOutputsInner>;
          result.outputs.replace(valueDes);
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  CodeInterpreterToolCall deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = CodeInterpreterToolCallBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class CodeInterpreterToolCallTypeEnum extends EnumClass {

  /// The type of the code interpreter tool call. Always `code_interpreter_call`. 
  @BuiltValueEnumConst(wireName: r'code_interpreter_call')
  static const CodeInterpreterToolCallTypeEnum codeInterpreterCall = _$codeInterpreterToolCallTypeEnum_codeInterpreterCall;

  static Serializer<CodeInterpreterToolCallTypeEnum> get serializer => _$codeInterpreterToolCallTypeEnumSerializer;

  const CodeInterpreterToolCallTypeEnum._(String name): super(name);

  static BuiltSet<CodeInterpreterToolCallTypeEnum> get values => _$codeInterpreterToolCallTypeEnumValues;
  static CodeInterpreterToolCallTypeEnum valueOf(String name) => _$codeInterpreterToolCallTypeEnumValueOf(name);
}

class CodeInterpreterToolCallStatusEnum extends EnumClass {

  /// The status of the code interpreter tool call. 
  @BuiltValueEnumConst(wireName: r'in_progress')
  static const CodeInterpreterToolCallStatusEnum inProgress = _$codeInterpreterToolCallStatusEnum_inProgress;
  /// The status of the code interpreter tool call. 
  @BuiltValueEnumConst(wireName: r'completed')
  static const CodeInterpreterToolCallStatusEnum completed = _$codeInterpreterToolCallStatusEnum_completed;
  /// The status of the code interpreter tool call. 
  @BuiltValueEnumConst(wireName: r'incomplete')
  static const CodeInterpreterToolCallStatusEnum incomplete = _$codeInterpreterToolCallStatusEnum_incomplete;
  /// The status of the code interpreter tool call. 
  @BuiltValueEnumConst(wireName: r'interpreting')
  static const CodeInterpreterToolCallStatusEnum interpreting = _$codeInterpreterToolCallStatusEnum_interpreting;
  /// The status of the code interpreter tool call. 
  @BuiltValueEnumConst(wireName: r'failed')
  static const CodeInterpreterToolCallStatusEnum failed = _$codeInterpreterToolCallStatusEnum_failed;

  static Serializer<CodeInterpreterToolCallStatusEnum> get serializer => _$codeInterpreterToolCallStatusEnumSerializer;

  const CodeInterpreterToolCallStatusEnum._(String name): super(name);

  static BuiltSet<CodeInterpreterToolCallStatusEnum> get values => _$codeInterpreterToolCallStatusEnumValues;
  static CodeInterpreterToolCallStatusEnum valueOf(String name) => _$codeInterpreterToolCallStatusEnumValueOf(name);
}

