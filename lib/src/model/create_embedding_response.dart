//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:openai_flutter_sdk/src/model/embedding.dart';
import 'package:built_collection/built_collection.dart';
import 'package:openai_flutter_sdk/src/model/create_embedding_response_usage.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'create_embedding_response.g.dart';

/// CreateEmbeddingResponse
///
/// Properties:
/// * [data] - The list of embeddings generated by the model.
/// * [model] - The name of the model used to generate the embedding.
/// * [object] - The object type, which is always \"list\".
/// * [usage] 
@BuiltValue()
abstract class CreateEmbeddingResponse implements Built<CreateEmbeddingResponse, CreateEmbeddingResponseBuilder> {
  /// The list of embeddings generated by the model.
  @BuiltValueField(wireName: r'data')
  BuiltList<Embedding> get data;

  /// The name of the model used to generate the embedding.
  @BuiltValueField(wireName: r'model')
  String get model;

  /// The object type, which is always \"list\".
  @BuiltValueField(wireName: r'object')
  CreateEmbeddingResponseObjectEnum get object;
  // enum objectEnum {  list,  };

  @BuiltValueField(wireName: r'usage')
  CreateEmbeddingResponseUsage get usage;

  CreateEmbeddingResponse._();

  factory CreateEmbeddingResponse([void updates(CreateEmbeddingResponseBuilder b)]) = _$CreateEmbeddingResponse;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(CreateEmbeddingResponseBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<CreateEmbeddingResponse> get serializer => _$CreateEmbeddingResponseSerializer();
}

class _$CreateEmbeddingResponseSerializer implements PrimitiveSerializer<CreateEmbeddingResponse> {
  @override
  final Iterable<Type> types = const [CreateEmbeddingResponse, _$CreateEmbeddingResponse];

  @override
  final String wireName = r'CreateEmbeddingResponse';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    CreateEmbeddingResponse object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'data';
    yield serializers.serialize(
      object.data,
      specifiedType: const FullType(BuiltList, [FullType(Embedding)]),
    );
    yield r'model';
    yield serializers.serialize(
      object.model,
      specifiedType: const FullType(String),
    );
    yield r'object';
    yield serializers.serialize(
      object.object,
      specifiedType: const FullType(CreateEmbeddingResponseObjectEnum),
    );
    yield r'usage';
    yield serializers.serialize(
      object.usage,
      specifiedType: const FullType(CreateEmbeddingResponseUsage),
    );
  }

  @override
  Object serialize(
    Serializers serializers,
    CreateEmbeddingResponse object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required CreateEmbeddingResponseBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'data':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(BuiltList, [FullType(Embedding)]),
          ) as BuiltList<Embedding>;
          result.data.replace(valueDes);
          break;
        case r'model':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.model = valueDes;
          break;
        case r'object':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(CreateEmbeddingResponseObjectEnum),
          ) as CreateEmbeddingResponseObjectEnum;
          result.object = valueDes;
          break;
        case r'usage':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(CreateEmbeddingResponseUsage),
          ) as CreateEmbeddingResponseUsage;
          result.usage.replace(valueDes);
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  CreateEmbeddingResponse deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = CreateEmbeddingResponseBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class CreateEmbeddingResponseObjectEnum extends EnumClass {

  /// The object type, which is always \"list\".
  @BuiltValueEnumConst(wireName: r'list')
  static const CreateEmbeddingResponseObjectEnum list = _$createEmbeddingResponseObjectEnum_list;

  static Serializer<CreateEmbeddingResponseObjectEnum> get serializer => _$createEmbeddingResponseObjectEnumSerializer;

  const CreateEmbeddingResponseObjectEnum._(String name): super(name);

  static BuiltSet<CreateEmbeddingResponseObjectEnum> get values => _$createEmbeddingResponseObjectEnumValues;
  static CreateEmbeddingResponseObjectEnum valueOf(String name) => _$createEmbeddingResponseObjectEnumValueOf(name);
}

