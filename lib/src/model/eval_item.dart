//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:openai_flutter_sdk/src/model/eval_item_content.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'eval_item.g.dart';

/// A message input to the model with a role indicating instruction following hierarchy. Instructions given with the `developer` or `system` role take precedence over instructions given with the `user` role. Messages with the `assistant` role are presumed to have been generated by the model in previous interactions. 
///
/// Properties:
/// * [role] - The role of the message input. One of `user`, `assistant`, `system`, or `developer`. 
/// * [content] 
/// * [type] - The type of the message input. Always `message`. 
@BuiltValue()
abstract class EvalItem implements Built<EvalItem, EvalItemBuilder> {
  /// The role of the message input. One of `user`, `assistant`, `system`, or `developer`. 
  @BuiltValueField(wireName: r'role')
  EvalItemRoleEnum get role;
  // enum roleEnum {  user,  assistant,  system,  developer,  };

  @BuiltValueField(wireName: r'content')
  EvalItemContent get content;

  /// The type of the message input. Always `message`. 
  @BuiltValueField(wireName: r'type')
  EvalItemTypeEnum? get type;
  // enum typeEnum {  message,  };

  EvalItem._();

  factory EvalItem([void updates(EvalItemBuilder b)]) = _$EvalItem;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(EvalItemBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<EvalItem> get serializer => _$EvalItemSerializer();
}

class _$EvalItemSerializer implements PrimitiveSerializer<EvalItem> {
  @override
  final Iterable<Type> types = const [EvalItem, _$EvalItem];

  @override
  final String wireName = r'EvalItem';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    EvalItem object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'role';
    yield serializers.serialize(
      object.role,
      specifiedType: const FullType(EvalItemRoleEnum),
    );
    yield r'content';
    yield serializers.serialize(
      object.content,
      specifiedType: const FullType(EvalItemContent),
    );
    if (object.type != null) {
      yield r'type';
      yield serializers.serialize(
        object.type,
        specifiedType: const FullType(EvalItemTypeEnum),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    EvalItem object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required EvalItemBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'role':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(EvalItemRoleEnum),
          ) as EvalItemRoleEnum;
          result.role = valueDes;
          break;
        case r'content':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(EvalItemContent),
          ) as EvalItemContent;
          result.content.replace(valueDes);
          break;
        case r'type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(EvalItemTypeEnum),
          ) as EvalItemTypeEnum;
          result.type = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  EvalItem deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = EvalItemBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class EvalItemRoleEnum extends EnumClass {

  /// The role of the message input. One of `user`, `assistant`, `system`, or `developer`. 
  @BuiltValueEnumConst(wireName: r'user')
  static const EvalItemRoleEnum user = _$evalItemRoleEnum_user;
  /// The role of the message input. One of `user`, `assistant`, `system`, or `developer`. 
  @BuiltValueEnumConst(wireName: r'assistant')
  static const EvalItemRoleEnum assistant = _$evalItemRoleEnum_assistant;
  /// The role of the message input. One of `user`, `assistant`, `system`, or `developer`. 
  @BuiltValueEnumConst(wireName: r'system')
  static const EvalItemRoleEnum system = _$evalItemRoleEnum_system;
  /// The role of the message input. One of `user`, `assistant`, `system`, or `developer`. 
  @BuiltValueEnumConst(wireName: r'developer')
  static const EvalItemRoleEnum developer = _$evalItemRoleEnum_developer;

  static Serializer<EvalItemRoleEnum> get serializer => _$evalItemRoleEnumSerializer;

  const EvalItemRoleEnum._(String name): super(name);

  static BuiltSet<EvalItemRoleEnum> get values => _$evalItemRoleEnumValues;
  static EvalItemRoleEnum valueOf(String name) => _$evalItemRoleEnumValueOf(name);
}

class EvalItemTypeEnum extends EnumClass {

  /// The type of the message input. Always `message`. 
  @BuiltValueEnumConst(wireName: r'message')
  static const EvalItemTypeEnum message = _$evalItemTypeEnum_message;

  static Serializer<EvalItemTypeEnum> get serializer => _$evalItemTypeEnumSerializer;

  const EvalItemTypeEnum._(String name): super(name);

  static BuiltSet<EvalItemTypeEnum> get values => _$evalItemTypeEnumValues;
  static EvalItemTypeEnum valueOf(String name) => _$evalItemTypeEnumValueOf(name);
}

