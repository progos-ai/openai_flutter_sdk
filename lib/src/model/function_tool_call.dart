//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'function_tool_call.g.dart';

/// A tool call to run a function. See the  [function calling guide](/docs/guides/function-calling) for more information. 
///
/// Properties:
/// * [id] - The unique ID of the function tool call. 
/// * [type] - The type of the function tool call. Always `function_call`. 
/// * [callId] - The unique ID of the function tool call generated by the model. 
/// * [name] - The name of the function to run. 
/// * [arguments] - A JSON string of the arguments to pass to the function. 
/// * [status] - The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
@BuiltValue(instantiable: false)
abstract class FunctionToolCall  {
  /// The unique ID of the function tool call. 
  @BuiltValueField(wireName: r'id')
  String? get id;

  /// The type of the function tool call. Always `function_call`. 
  @BuiltValueField(wireName: r'type')
  FunctionToolCallTypeEnum get type;
  // enum typeEnum {  function_call,  };

  /// The unique ID of the function tool call generated by the model. 
  @BuiltValueField(wireName: r'call_id')
  String get callId;

  /// The name of the function to run. 
  @BuiltValueField(wireName: r'name')
  String get name;

  /// A JSON string of the arguments to pass to the function. 
  @BuiltValueField(wireName: r'arguments')
  String get arguments;

  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueField(wireName: r'status')
  FunctionToolCallStatusEnum? get status;
  // enum statusEnum {  in_progress,  completed,  incomplete,  };

  @BuiltValueSerializer(custom: true)
  static Serializer<FunctionToolCall> get serializer => _$FunctionToolCallSerializer();
}

class _$FunctionToolCallSerializer implements PrimitiveSerializer<FunctionToolCall> {
  @override
  final Iterable<Type> types = const [FunctionToolCall];

  @override
  final String wireName = r'FunctionToolCall';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    FunctionToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    if (object.id != null) {
      yield r'id';
      yield serializers.serialize(
        object.id,
        specifiedType: const FullType(String),
      );
    }
    yield r'type';
    yield serializers.serialize(
      object.type,
      specifiedType: const FullType(FunctionToolCallTypeEnum),
    );
    yield r'call_id';
    yield serializers.serialize(
      object.callId,
      specifiedType: const FullType(String),
    );
    yield r'name';
    yield serializers.serialize(
      object.name,
      specifiedType: const FullType(String),
    );
    yield r'arguments';
    yield serializers.serialize(
      object.arguments,
      specifiedType: const FullType(String),
    );
    if (object.status != null) {
      yield r'status';
      yield serializers.serialize(
        object.status,
        specifiedType: const FullType(FunctionToolCallStatusEnum),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    FunctionToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  @override
  FunctionToolCall deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return serializers.deserialize(serialized, specifiedType: FullType($FunctionToolCall)) as $FunctionToolCall;
  }
}

/// a concrete implementation of [FunctionToolCall], since [FunctionToolCall] is not instantiable
@BuiltValue(instantiable: true)
abstract class $FunctionToolCall implements FunctionToolCall, Built<$FunctionToolCall, $FunctionToolCallBuilder> {
  $FunctionToolCall._();

  factory $FunctionToolCall([void Function($FunctionToolCallBuilder)? updates]) = _$$FunctionToolCall;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults($FunctionToolCallBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<$FunctionToolCall> get serializer => _$$FunctionToolCallSerializer();
}

class _$$FunctionToolCallSerializer implements PrimitiveSerializer<$FunctionToolCall> {
  @override
  final Iterable<Type> types = const [$FunctionToolCall, _$$FunctionToolCall];

  @override
  final String wireName = r'$FunctionToolCall';

  @override
  Object serialize(
    Serializers serializers,
    $FunctionToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return serializers.serialize(object, specifiedType: FullType(FunctionToolCall))!;
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required FunctionToolCallBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.id = valueDes;
          break;
        case r'type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(FunctionToolCallTypeEnum),
          ) as FunctionToolCallTypeEnum;
          result.type = valueDes;
          break;
        case r'call_id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.callId = valueDes;
          break;
        case r'name':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.name = valueDes;
          break;
        case r'arguments':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.arguments = valueDes;
          break;
        case r'status':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(FunctionToolCallStatusEnum),
          ) as FunctionToolCallStatusEnum;
          result.status = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  $FunctionToolCall deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = $FunctionToolCallBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class FunctionToolCallTypeEnum extends EnumClass {

  /// The type of the function tool call. Always `function_call`. 
  @BuiltValueEnumConst(wireName: r'function_call')
  static const FunctionToolCallTypeEnum functionCall = _$functionToolCallTypeEnum_functionCall;

  static Serializer<FunctionToolCallTypeEnum> get serializer => _$functionToolCallTypeEnumSerializer;

  const FunctionToolCallTypeEnum._(String name): super(name);

  static BuiltSet<FunctionToolCallTypeEnum> get values => _$functionToolCallTypeEnumValues;
  static FunctionToolCallTypeEnum valueOf(String name) => _$functionToolCallTypeEnumValueOf(name);
}

class FunctionToolCallStatusEnum extends EnumClass {

  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'in_progress')
  static const FunctionToolCallStatusEnum inProgress = _$functionToolCallStatusEnum_inProgress;
  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'completed')
  static const FunctionToolCallStatusEnum completed = _$functionToolCallStatusEnum_completed;
  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'incomplete')
  static const FunctionToolCallStatusEnum incomplete = _$functionToolCallStatusEnum_incomplete;

  static Serializer<FunctionToolCallStatusEnum> get serializer => _$functionToolCallStatusEnumSerializer;

  const FunctionToolCallStatusEnum._(String name): super(name);

  static BuiltSet<FunctionToolCallStatusEnum> get values => _$functionToolCallStatusEnumValues;
  static FunctionToolCallStatusEnum valueOf(String name) => _$functionToolCallStatusEnumValueOf(name);
}

