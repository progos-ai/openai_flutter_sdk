//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:openai_flutter_sdk/src/model/function_tool_call_output.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'function_tool_call_output_resource.g.dart';

/// FunctionToolCallOutputResource
///
/// Properties:
/// * [id] - The unique ID of the function call tool output. 
/// * [type] - The type of the function tool call output. Always `function_call_output`. 
/// * [callId] - The unique ID of the function tool call generated by the model. 
/// * [output] - A JSON string of the output of the function tool call. 
/// * [status] - The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
@BuiltValue()
abstract class FunctionToolCallOutputResource implements FunctionToolCallOutput, Built<FunctionToolCallOutputResource, FunctionToolCallOutputResourceBuilder> {
  FunctionToolCallOutputResource._();

  factory FunctionToolCallOutputResource([void updates(FunctionToolCallOutputResourceBuilder b)]) = _$FunctionToolCallOutputResource;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(FunctionToolCallOutputResourceBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<FunctionToolCallOutputResource> get serializer => _$FunctionToolCallOutputResourceSerializer();
}

class _$FunctionToolCallOutputResourceSerializer implements PrimitiveSerializer<FunctionToolCallOutputResource> {
  @override
  final Iterable<Type> types = const [FunctionToolCallOutputResource, _$FunctionToolCallOutputResource];

  @override
  final String wireName = r'FunctionToolCallOutputResource';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    FunctionToolCallOutputResource object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'call_id';
    yield serializers.serialize(
      object.callId,
      specifiedType: const FullType(String),
    );
    yield r'output';
    yield serializers.serialize(
      object.output,
      specifiedType: const FullType(String),
    );
    if (object.id != null) {
      yield r'id';
      yield serializers.serialize(
        object.id,
        specifiedType: const FullType(String),
      );
    }
    yield r'type';
    yield serializers.serialize(
      object.type,
      specifiedType: const FullType(FunctionToolCallOutputTypeEnum),
    );
    if (object.status != null) {
      yield r'status';
      yield serializers.serialize(
        object.status,
        specifiedType: const FullType(FunctionToolCallOutputStatusEnum),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    FunctionToolCallOutputResource object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required FunctionToolCallOutputResourceBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'call_id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.callId = valueDes;
          break;
        case r'output':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.output = valueDes;
          break;
        case r'id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.id = valueDes;
          break;
        case r'type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(FunctionToolCallOutputTypeEnum),
          ) as FunctionToolCallOutputTypeEnum;
          result.type = valueDes;
          break;
        case r'status':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(FunctionToolCallOutputStatusEnum),
          ) as FunctionToolCallOutputStatusEnum;
          result.status = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  FunctionToolCallOutputResource deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = FunctionToolCallOutputResourceBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class FunctionToolCallOutputResourceTypeEnum extends EnumClass {

  /// The type of the function tool call output. Always `function_call_output`. 
  @BuiltValueEnumConst(wireName: r'function_call_output')
  static const FunctionToolCallOutputResourceTypeEnum functionCallOutput = _$functionToolCallOutputResourceTypeEnum_functionCallOutput;

  static Serializer<FunctionToolCallOutputResourceTypeEnum> get serializer => _$functionToolCallOutputResourceTypeEnumSerializer;

  const FunctionToolCallOutputResourceTypeEnum._(String name): super(name);

  static BuiltSet<FunctionToolCallOutputResourceTypeEnum> get values => _$functionToolCallOutputResourceTypeEnumValues;
  static FunctionToolCallOutputResourceTypeEnum valueOf(String name) => _$functionToolCallOutputResourceTypeEnumValueOf(name);
}

class FunctionToolCallOutputResourceStatusEnum extends EnumClass {

  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'in_progress')
  static const FunctionToolCallOutputResourceStatusEnum inProgress = _$functionToolCallOutputResourceStatusEnum_inProgress;
  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'completed')
  static const FunctionToolCallOutputResourceStatusEnum completed = _$functionToolCallOutputResourceStatusEnum_completed;
  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'incomplete')
  static const FunctionToolCallOutputResourceStatusEnum incomplete = _$functionToolCallOutputResourceStatusEnum_incomplete;

  static Serializer<FunctionToolCallOutputResourceStatusEnum> get serializer => _$functionToolCallOutputResourceStatusEnumSerializer;

  const FunctionToolCallOutputResourceStatusEnum._(String name): super(name);

  static BuiltSet<FunctionToolCallOutputResourceStatusEnum> get values => _$functionToolCallOutputResourceStatusEnumValues;
  static FunctionToolCallOutputResourceStatusEnum valueOf(String name) => _$functionToolCallOutputResourceStatusEnumValueOf(name);
}

