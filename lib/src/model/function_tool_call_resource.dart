//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:built_collection/built_collection.dart';
import 'package:openai_flutter_sdk/src/model/function_tool_call.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'function_tool_call_resource.g.dart';

/// FunctionToolCallResource
///
/// Properties:
/// * [id] - The unique ID of the function tool call. 
/// * [type] - The type of the function tool call. Always `function_call`. 
/// * [callId] - The unique ID of the function tool call generated by the model. 
/// * [name] - The name of the function to run. 
/// * [arguments] - A JSON string of the arguments to pass to the function. 
/// * [status] - The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
@BuiltValue()
abstract class FunctionToolCallResource implements FunctionToolCall, Built<FunctionToolCallResource, FunctionToolCallResourceBuilder> {
  FunctionToolCallResource._();

  factory FunctionToolCallResource([void updates(FunctionToolCallResourceBuilder b)]) = _$FunctionToolCallResource;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(FunctionToolCallResourceBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<FunctionToolCallResource> get serializer => _$FunctionToolCallResourceSerializer();
}

class _$FunctionToolCallResourceSerializer implements PrimitiveSerializer<FunctionToolCallResource> {
  @override
  final Iterable<Type> types = const [FunctionToolCallResource, _$FunctionToolCallResource];

  @override
  final String wireName = r'FunctionToolCallResource';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    FunctionToolCallResource object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'call_id';
    yield serializers.serialize(
      object.callId,
      specifiedType: const FullType(String),
    );
    yield r'name';
    yield serializers.serialize(
      object.name,
      specifiedType: const FullType(String),
    );
    yield r'arguments';
    yield serializers.serialize(
      object.arguments,
      specifiedType: const FullType(String),
    );
    if (object.id != null) {
      yield r'id';
      yield serializers.serialize(
        object.id,
        specifiedType: const FullType(String),
      );
    }
    yield r'type';
    yield serializers.serialize(
      object.type,
      specifiedType: const FullType(FunctionToolCallTypeEnum),
    );
    if (object.status != null) {
      yield r'status';
      yield serializers.serialize(
        object.status,
        specifiedType: const FullType(FunctionToolCallStatusEnum),
      );
    }
  }

  @override
  Object serialize(
    Serializers serializers,
    FunctionToolCallResource object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required FunctionToolCallResourceBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'call_id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.callId = valueDes;
          break;
        case r'name':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.name = valueDes;
          break;
        case r'arguments':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.arguments = valueDes;
          break;
        case r'id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.id = valueDes;
          break;
        case r'type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(FunctionToolCallTypeEnum),
          ) as FunctionToolCallTypeEnum;
          result.type = valueDes;
          break;
        case r'status':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(FunctionToolCallStatusEnum),
          ) as FunctionToolCallStatusEnum;
          result.status = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  FunctionToolCallResource deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = FunctionToolCallResourceBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class FunctionToolCallResourceTypeEnum extends EnumClass {

  /// The type of the function tool call. Always `function_call`. 
  @BuiltValueEnumConst(wireName: r'function_call')
  static const FunctionToolCallResourceTypeEnum functionCall = _$functionToolCallResourceTypeEnum_functionCall;

  static Serializer<FunctionToolCallResourceTypeEnum> get serializer => _$functionToolCallResourceTypeEnumSerializer;

  const FunctionToolCallResourceTypeEnum._(String name): super(name);

  static BuiltSet<FunctionToolCallResourceTypeEnum> get values => _$functionToolCallResourceTypeEnumValues;
  static FunctionToolCallResourceTypeEnum valueOf(String name) => _$functionToolCallResourceTypeEnumValueOf(name);
}

class FunctionToolCallResourceStatusEnum extends EnumClass {

  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'in_progress')
  static const FunctionToolCallResourceStatusEnum inProgress = _$functionToolCallResourceStatusEnum_inProgress;
  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'completed')
  static const FunctionToolCallResourceStatusEnum completed = _$functionToolCallResourceStatusEnum_completed;
  /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
  @BuiltValueEnumConst(wireName: r'incomplete')
  static const FunctionToolCallResourceStatusEnum incomplete = _$functionToolCallResourceStatusEnum_incomplete;

  static Serializer<FunctionToolCallResourceStatusEnum> get serializer => _$functionToolCallResourceStatusEnumSerializer;

  const FunctionToolCallResourceStatusEnum._(String name): super(name);

  static BuiltSet<FunctionToolCallResourceStatusEnum> get values => _$functionToolCallResourceStatusEnumValues;
  static FunctionToolCallResourceStatusEnum valueOf(String name) => _$functionToolCallResourceStatusEnumValueOf(name);
}

