//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//

// ignore_for_file: unused_element
import 'package:openai_flutter_sdk/src/model/local_shell_exec_action.dart';
import 'package:built_collection/built_collection.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';

part 'local_shell_tool_call.g.dart';

/// A tool call to run a command on the local shell. 
///
/// Properties:
/// * [type] - The type of the local shell call. Always `local_shell_call`. 
/// * [id] - The unique ID of the local shell call. 
/// * [callId] - The unique ID of the local shell tool call generated by the model. 
/// * [action] 
/// * [status] - The status of the local shell call. 
@BuiltValue()
abstract class LocalShellToolCall implements Built<LocalShellToolCall, LocalShellToolCallBuilder> {
  /// The type of the local shell call. Always `local_shell_call`. 
  @BuiltValueField(wireName: r'type')
  LocalShellToolCallTypeEnum get type;
  // enum typeEnum {  local_shell_call,  };

  /// The unique ID of the local shell call. 
  @BuiltValueField(wireName: r'id')
  String get id;

  /// The unique ID of the local shell tool call generated by the model. 
  @BuiltValueField(wireName: r'call_id')
  String get callId;

  @BuiltValueField(wireName: r'action')
  LocalShellExecAction get action;

  /// The status of the local shell call. 
  @BuiltValueField(wireName: r'status')
  LocalShellToolCallStatusEnum get status;
  // enum statusEnum {  in_progress,  completed,  incomplete,  };

  LocalShellToolCall._();

  factory LocalShellToolCall([void updates(LocalShellToolCallBuilder b)]) = _$LocalShellToolCall;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(LocalShellToolCallBuilder b) => b;

  @BuiltValueSerializer(custom: true)
  static Serializer<LocalShellToolCall> get serializer => _$LocalShellToolCallSerializer();
}

class _$LocalShellToolCallSerializer implements PrimitiveSerializer<LocalShellToolCall> {
  @override
  final Iterable<Type> types = const [LocalShellToolCall, _$LocalShellToolCall];

  @override
  final String wireName = r'LocalShellToolCall';

  Iterable<Object?> _serializeProperties(
    Serializers serializers,
    LocalShellToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) sync* {
    yield r'type';
    yield serializers.serialize(
      object.type,
      specifiedType: const FullType(LocalShellToolCallTypeEnum),
    );
    yield r'id';
    yield serializers.serialize(
      object.id,
      specifiedType: const FullType(String),
    );
    yield r'call_id';
    yield serializers.serialize(
      object.callId,
      specifiedType: const FullType(String),
    );
    yield r'action';
    yield serializers.serialize(
      object.action,
      specifiedType: const FullType(LocalShellExecAction),
    );
    yield r'status';
    yield serializers.serialize(
      object.status,
      specifiedType: const FullType(LocalShellToolCallStatusEnum),
    );
  }

  @override
  Object serialize(
    Serializers serializers,
    LocalShellToolCall object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    return _serializeProperties(serializers, object, specifiedType: specifiedType).toList();
  }

  void _deserializeProperties(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
    required List<Object?> serializedList,
    required LocalShellToolCallBuilder result,
    required List<Object?> unhandled,
  }) {
    for (var i = 0; i < serializedList.length; i += 2) {
      final key = serializedList[i] as String;
      final value = serializedList[i + 1];
      switch (key) {
        case r'type':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(LocalShellToolCallTypeEnum),
          ) as LocalShellToolCallTypeEnum;
          result.type = valueDes;
          break;
        case r'id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.id = valueDes;
          break;
        case r'call_id':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(String),
          ) as String;
          result.callId = valueDes;
          break;
        case r'action':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(LocalShellExecAction),
          ) as LocalShellExecAction;
          result.action.replace(valueDes);
          break;
        case r'status':
          final valueDes = serializers.deserialize(
            value,
            specifiedType: const FullType(LocalShellToolCallStatusEnum),
          ) as LocalShellToolCallStatusEnum;
          result.status = valueDes;
          break;
        default:
          unhandled.add(key);
          unhandled.add(value);
          break;
      }
    }
  }

  @override
  LocalShellToolCall deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = LocalShellToolCallBuilder();
    final serializedList = (serialized as Iterable<Object?>).toList();
    final unhandled = <Object?>[];
    _deserializeProperties(
      serializers,
      serialized,
      specifiedType: specifiedType,
      serializedList: serializedList,
      unhandled: unhandled,
      result: result,
    );
    return result.build();
  }
}

class LocalShellToolCallTypeEnum extends EnumClass {

  /// The type of the local shell call. Always `local_shell_call`. 
  @BuiltValueEnumConst(wireName: r'local_shell_call')
  static const LocalShellToolCallTypeEnum localShellCall = _$localShellToolCallTypeEnum_localShellCall;

  static Serializer<LocalShellToolCallTypeEnum> get serializer => _$localShellToolCallTypeEnumSerializer;

  const LocalShellToolCallTypeEnum._(String name): super(name);

  static BuiltSet<LocalShellToolCallTypeEnum> get values => _$localShellToolCallTypeEnumValues;
  static LocalShellToolCallTypeEnum valueOf(String name) => _$localShellToolCallTypeEnumValueOf(name);
}

class LocalShellToolCallStatusEnum extends EnumClass {

  /// The status of the local shell call. 
  @BuiltValueEnumConst(wireName: r'in_progress')
  static const LocalShellToolCallStatusEnum inProgress = _$localShellToolCallStatusEnum_inProgress;
  /// The status of the local shell call. 
  @BuiltValueEnumConst(wireName: r'completed')
  static const LocalShellToolCallStatusEnum completed = _$localShellToolCallStatusEnum_completed;
  /// The status of the local shell call. 
  @BuiltValueEnumConst(wireName: r'incomplete')
  static const LocalShellToolCallStatusEnum incomplete = _$localShellToolCallStatusEnum_incomplete;

  static Serializer<LocalShellToolCallStatusEnum> get serializer => _$localShellToolCallStatusEnumSerializer;

  const LocalShellToolCallStatusEnum._(String name): super(name);

  static BuiltSet<LocalShellToolCallStatusEnum> get values => _$localShellToolCallStatusEnumValues;
  static LocalShellToolCallStatusEnum valueOf(String name) => _$localShellToolCallStatusEnumValueOf(name);
}

